[user]
	name = Henrik Bak Thomassen
  email = henbak@gmail.com
[github]
	user = henrikbak
[core]
	autocrlf = input
	editor = nano
	whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	filemode = false
[color]
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[color "diff"]
	whitespace = red reverse
[push]
	default = matching
[alias]
	cp = cherry-pick
	st = status
	cl = clone
	ci = commit
	co = checkout
	br = branch
	diff = diff --word-diff
	dc = diff --cached

	r = reset
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rh = reset --hard
	rh1 = reset HEAD^ --hard
	rh2 = reset HEAD^^ --hard

	# List aliases
	la = "!git config -l | grep alias | cut -c 7-"

	# Switch to a branch, creating it if necessary
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

	# Push to current origin branch
	pso = !git push origin $(git rev-parse --abbrev-ref HEAD)

	# Pull from current origin branch
	plo = !git pull origin $(git rev-parse --abbrev-ref HEAD)

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

	# Amend the currently staged files to the latest commit
	amend = commit --amend --reuse-message=HEAD

	# List contributors with number of commits
	contributors = shortlog --summary --numbered

	# Remove branches that have already been merged with master
	# a.k.a. ‘delete merged’
	dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

	# Pretty log
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
	fl = log -u

	# Grep
	gr = grep -Ii
	gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
